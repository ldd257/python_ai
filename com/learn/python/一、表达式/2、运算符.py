"""
运算符分为如下几种：
1. 算术运算符
2. 比较运算符
3. 逻辑运算符
4. 位运算符
5. 三元运算符
6. 包含运算符
"""


"""
算术运算符：
+  加
-  减
*  乘
/  除
// 整除
%  取余
** 幂
"""

# 算术运算符
print("3 + 4=", 3 + 4)
print("3 - 4=", 3 - 4)
print("3 * 4=", 3 * 4)
print("3 / 4=", 3 / 4)
print("3 // 4=", 3 // 4)
print("3 % 4=", 3 % 4)
print("3 ** 4=", 3 ** 4)


"""
比较运算符：
>  大于
>= 大于等于
<  小于
<= 小于等于
== 等于
!= 不等于
"""
print("3 > 4", 3 > 4)
print("3 >= 4", 3 >= 4)
print("3 < 4", 3 < 4)
print("3 <= 4", 3 <= 4)
print("3 == 4", 3 == 4)
print("3 != 4", 3 != 4)


"""
逻辑运算符:
and  与
or   或
not  非
"""
print("(3 > 4) and (2 > 1)", (3 > 4) and (2 > 1))
print("(3 > 4) or (2 > 1)", (3 > 4) or (2 > 1))
print("not (2 > 1)", not (2 > 1))


"""
位运算符：
~  按位取反      ~4
&  按位与       4 & 5
|  按位或       4 | 5
^  按位异或     4 ^ 5
<< 左移        4 << 2，表示整数 4 按位左移 2 位
>> 右移        4 >> 2，表示整数 4 按位右移 2 位
"""
# 按位取反
print("~ 1=", ~ 1)
print("~ 0=", ~ 0)

# 按位与
print("0 & 1=", 0 & 1)

# 按位或
print("0 | 1=", 0 | 1)

# 按位或
print("0 ^ 1=", 0 ^ 1)

# 左移
print("2 << 2=", 2 << 2)

# 右移
print("8 >> 2=", 8 >> 2)


# 三元运算符
# 解决的问题
x, y = 4, 5
if x < y:
    print(y)
else:
    print(x)
# 使用三元运算符进行解决，上述问题
print(y if x < y else x)


"""
包含运算符：
is      是
is not  不是
in      在
not in  不在
"""
print("'hello' is 'hello'", 'hello' is 'hello')
print("3 is not 5", 3 is not 5)

letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G']
if 'A' in letters:
    print('A 存在')

if 'h' not in letters:
    print('h 不存在')


# ======================================
a = "hello"
b = "hello"
print(a is b, a == b)
# True True

a = ["hello"]
b = ["hello"]
print(a is b, a == b)
# False True
"""
注意：
1. is, is not 对比的是两个变量的内存地址
2. ==, != 对比的是两个变量的值
即：
1. 假如比较的两个变量，指向的都是地址不可变的类型（str等），那么is，is not 和 ==，！= 是完全等价的。
2. 假如对比的两个变量，指向的是地址可变的类型（list，dict，tuple等），则两者是有区别的。
"""

# ====================================
"""
运算符的优先级
1. 一元运算符优于二元运算符。如正负号。
2. 先算术运算，后移位运算，最后位运算。例如 1 << 3 + 2 & 7等价于 (1 << (3 + 2)) & 7
3. 逻辑运算最后结合
"""
print(-3 ** 2)
# -9
print(3 ** -2)
# 0.1111111111111111
print(-3 * 2 + 5 / -2 - 4)
# -12.5
print(3 < 6 and 4 < 5)
# True
